What happens when you initialize a repository? 
Why do you need to do it?
it creates a special .git file to hold all the repository information, version-control data etc.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area differs from the working directory by holding onto files that you wnat to work on and eventually commit without havent to commit all the files in that directory every time you make a change on only a few specific files.

How can you use the staging area to make sure you have one commit per logical change?
only place the file(s) with a logical change in the staging area before you commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
trying experimental features, additional languages, diff dev groups working towards a future product but working on seperate peices of the bigger puzzle. Branches allows for all of this and more!!!

How do the diagrams help you visualize the branch structure?
Make you visually aware of how many branches there are and at what point they branched off.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
We get one master branch with the commit of both braches, to show that we can reach all the previous commits from both branches within the master branch.